# Generated by Django 4.2.20 on 2025-04-28 18:23

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import django_bleach.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CountOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50, unique=True)),
                ('numeric_sort', models.IntegerField(blank=True, help_text='قيمة رقمية للترتيب', null=True)),
            ],
            options={
                'verbose_name': 'Count Option',
                'verbose_name_plural': 'Count Options',
                'ordering': ['numeric_sort', 'value'],
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('flag_image', models.ImageField(upload_to='offices/flags/')),
            ],
            options={
                'verbose_name': 'Office',
                'verbose_name_plural': 'Offices',
            },
        ),
        migrations.CreateModel(
            name='PackagingOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('fresh', 'Fresh'), ('iqf', 'IQF')], default='fresh', max_length=10)),
                ('net_weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('weight_unit', models.CharField(default='kg', max_length=10)),
                ('cartons_per_pallet', models.PositiveIntegerField(default=0)),
                ('pallets_per_container', models.PositiveIntegerField(default=0)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/packaging_options/')),
            ],
            options={
                'verbose_name': 'Packaging Option',
                'verbose_name_plural': 'Packaging Options',
                'ordering': ['name'],
                'unique_together': {('name', 'type', 'net_weight', 'weight_unit')},
            },
        ),
        migrations.CreateModel(
            name='PackagingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Packaging Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/packaging_types/', verbose_name='Packaging Image')),
                ('key_word', models.CharField(help_text="المصطلح المميز مثل 'boxes', 'cartons' إلخ", max_length=50, verbose_name='Key Word')),
                ('is_fresh', models.BooleanField(default=True, verbose_name='For Fresh Products')),
                ('is_iqf', models.BooleanField(default=True, verbose_name='For IQF Products')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Packaging Type',
                'verbose_name_plural': 'Packaging Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Product Name')),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', django_bleach.models.BleachField(blank=True, null=True, verbose_name='Description')),
                ('fresh_description', django_bleach.models.BleachField(blank=True, help_text='وصف خاص بالمنتج الطازج فقط', null=True, verbose_name='Fresh Description')),
                ('iqf_description', django_bleach.models.BleachField(blank=True, help_text='وصف خاص بالمنتج المجمد فقط', null=True, verbose_name='IQF Description')),
                ('fresh_image', models.ImageField(blank=True, null=True, upload_to='products/images/')),
                ('iqf_image', models.ImageField(blank=True, null=True, upload_to='products/images/')),
                ('background_left', models.ImageField(blank=True, null=True, upload_to='products/backgrounds/')),
                ('background_right', models.ImageField(blank=True, null=True, upload_to='products/backgrounds/')),
                ('bg_image', models.ImageField(blank=True, help_text='صورة خلفية كاملة للمنتج المخصوص', null=True, upload_to='products/backgrounds/', verbose_name='Background Image')),
                ('fresh_packaging_image', models.ImageField(blank=True, null=True, upload_to='products/packaging/')),
                ('iqf_packaging_image', models.ImageField(blank=True, null=True, upload_to='products/packaging/')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='products/icons/')),
                ('iqf_icon', models.ImageField(blank=True, null=True, upload_to='products/icons/')),
                ('seasonality_icon', models.ImageField(blank=True, null=True, upload_to='products/seasonality_icons/', verbose_name='Seasonality Icon')),
                ('list_image', models.ImageField(blank=True, null=True, upload_to='products/list/')),
                ('button_color', colorfield.fields.ColorField(blank=True, default='#5cbcaa', help_text='Choose a color for the product button', image_field=None, max_length=18, samples=None, verbose_name='Button Color')),
                ('product_type', models.CharField(choices=[('fresh', 'Fresh'), ('iqf', 'IQF'), ('both', 'Both Fresh & IQF'), ('general', 'General')], default='both', max_length=10)),
                ('has_varieties', models.BooleanField(default=False)),
                ('has_counts', models.BooleanField(default=False)),
                ('has_size', models.BooleanField(default=False)),
                ('has_packaging', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_popular', models.BooleanField(default=False)),
                ('is_in_slider', models.BooleanField(default=False)),
                ('is_special', models.BooleanField(default=False, help_text='حدد هذا الخيار إذا كان المنتج مخصوصًا بتصميم مختلف', verbose_name='Special Product')),
                ('meta_title', models.CharField(blank=True, max_length=100)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(default=0, help_text='Order of the product on the product page (lower numbers appear first)')),
                ('available_counts', models.ManyToManyField(blank=True, related_name='products_with_count', to='products.countoption')),
                ('available_packaging', models.ManyToManyField(blank=True, related_name='products_with_packaging', to='products.packagingoption')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('product_name', models.CharField(max_length=100)),
                ('product_description', models.TextField()),
                ('product_quantity', models.CharField(max_length=50)),
                ('requested_specifications', models.TextField(blank=True)),
                ('target_price_range', models.CharField(blank=True, max_length=100)),
                ('preferred_delivery_date', models.DateField(blank=True, null=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='product_requests/attachments/')),
                ('additional_notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('reviewing', 'Reviewing'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='new', max_length=15)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes (not visible to customers)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product Request',
                'verbose_name_plural': 'Product Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', django_bleach.models.BleachField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/varieties/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='varieties', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Variety',
                'verbose_name_plural': 'Product Varieties',
            },
        ),
        migrations.CreateModel(
            name='SeasonIcon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('icon', models.ImageField(upload_to='products/season_icons/')),
                ('color_code', models.CharField(blank=True, help_text='Hex color code', max_length=7)),
                ('display_order', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Season Icon',
                'verbose_name_plural': 'Season Icons',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SizeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Size Option',
                'verbose_name_plural': 'Size Options',
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='Seasonality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('fresh', 'Fresh'), ('iqf', 'IQF')], default='fresh', max_length=10)),
                ('season_icon', models.ImageField(blank=True, null=True, upload_to='products/seasonality_icons/', verbose_name='Seasonality Icon')),
                ('jan', models.BooleanField(default=False, verbose_name='January')),
                ('feb', models.BooleanField(default=False, verbose_name='February')),
                ('mar', models.BooleanField(default=False, verbose_name='March')),
                ('apr', models.BooleanField(default=False, verbose_name='April')),
                ('may', models.BooleanField(default=False, verbose_name='May')),
                ('jun', models.BooleanField(default=False, verbose_name='June')),
                ('jul', models.BooleanField(default=False, verbose_name='July')),
                ('aug', models.BooleanField(default=False, verbose_name='August')),
                ('sep', models.BooleanField(default=False, verbose_name='September')),
                ('oct', models.BooleanField(default=False, verbose_name='October')),
                ('nov', models.BooleanField(default=False, verbose_name='November')),
                ('dec', models.BooleanField(default=False, verbose_name='December')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seasonality', to='products.product')),
                ('variety', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seasonality', to='products.productvariety')),
            ],
            options={
                'verbose_name': 'Seasonality',
                'verbose_name_plural': 'Seasonalities',
            },
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('type', models.CharField(choices=[('fresh', 'Fresh'), ('iqf', 'IQF')], default='fresh', max_length=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Size',
                'verbose_name_plural': 'Product Sizes',
            },
        ),
        migrations.CreateModel(
            name='ProductPackagingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('fresh', 'Fresh'), ('iqf', 'IQF')], default='fresh', max_length=10, verbose_name='Product Type')),
                ('pallets_per_container', models.PositiveIntegerField(default=0, verbose_name='Pallets per Container')),
                ('items_per_pallet', models.PositiveIntegerField(default=0, verbose_name='Items per Pallet')),
                ('show_fresh_label', models.BooleanField(default=True, help_text='عرض عنوان Fresh فوق مربع التغليف (فقط للمنتجات الطازجة)', verbose_name='Show Fresh Label')),
                ('order', models.PositiveIntegerField(default=0, help_text='ترتيب ظهور نوع التغليف في الصفحة (الأرقام الأصغر تظهر أولاً)', verbose_name='Display Order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('packaging_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_packaging_types', to='products.packagingtype')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_packaging_types', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Packaging Type',
                'verbose_name_plural': 'Product Packaging Types',
                'ordering': ['type', 'order', 'product', 'packaging_type'],
            },
        ),
        migrations.CreateModel(
            name='ProductPackaging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('fresh', 'Fresh'), ('iqf', 'IQF')], default='fresh', max_length=10)),
                ('net_weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('weight_unit', models.CharField(default='kg', max_length=10)),
                ('cartons_per_pallet', models.PositiveIntegerField(default=0)),
                ('pallets_per_container', models.PositiveIntegerField(default=0)),
                ('note', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packaging', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Packaging',
                'verbose_name_plural': 'Product Packaging',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='available_sizes',
            field=models.ManyToManyField(blank=True, related_name='products_with_size', to='products.sizeoption'),
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('type', models.CharField(choices=[('contact', 'Contact Message'), ('quote', 'Quote Request')], default='contact', max_length=10)),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='new', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('products', models.ManyToManyField(blank=True, related_name='product_inquiries', to='products.product')),
            ],
            options={
                'verbose_name': 'Inquiry',
                'verbose_name_plural': 'Inquiries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='seasonality',
            constraint=models.CheckConstraint(check=models.Q(('product__isnull', False), ('variety__isnull', False), _connector='OR'), name='seasonality_product_or_variety'),
        ),
        migrations.AlterUniqueTogether(
            name='productpackagingtype',
            unique_together={('product', 'packaging_type', 'type')},
        ),
    ]
